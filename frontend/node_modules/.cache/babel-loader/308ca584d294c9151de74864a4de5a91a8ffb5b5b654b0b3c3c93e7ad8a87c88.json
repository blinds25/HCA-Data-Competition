{"ast":null,"code":"var _jsxFileName = \"/Users/brysonlindsey/Documents/my-project/frontend/src/components/MapComponent.js\";\n// frontend/src/components/MapComponent.js\n\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix default icon issues (if needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nfunction MapComponent({\n  data,\n  zipCode,\n  center\n}) {\n  // center is expected as an object: { lat: <number>, lon: <number> }\n  // Fallback to a default coordinate if none provided.\n  const defaultCenter = center ? [center.lat, center.lon] : [37.773972, -122.431297];\n\n  // Marker for the entered zip code.\n  const enteredZipMarker = /*#__PURE__*/_jsxDEV(Marker, {\n    position: defaultCenter,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [\"Entered Zip Code: \", zipCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  // Extract unique nearby zip codes (exclude the entered zip code)\n  // We'll build an object keyed by zip code and store one set of coordinates.\n  const uniqueNearby = {};\n  data.forEach(person => {\n    if (person.zip_code !== zipCode && person.latitude && person.longitude) {\n      // Only add if we haven't added this zip code already.\n      if (!uniqueNearby[person.zip_code]) {\n        uniqueNearby[person.zip_code] = {\n          lat: parseFloat(person.latitude),\n          lon: parseFloat(person.longitude)\n        };\n      }\n    }\n  });\n  const uniqueMarkers = Object.entries(uniqueNearby).map(([zip, coords]) => /*#__PURE__*/_jsxDEV(Marker, {\n    position: [coords.lat, coords.lon],\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [\"Nearby Zip: \", zip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, zip, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: defaultCenter,\n    zoom: 12,\n    style: {\n      height: '300px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), enteredZipMarker, uniqueMarkers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","data","zipCode","center","defaultCenter","lat","lon","enteredZipMarker","position","children","fileName","_jsxFileName","lineNumber","columnNumber","uniqueNearby","forEach","person","zip_code","latitude","longitude","parseFloat","uniqueMarkers","Object","entries","map","zip","coords","zoom","style","height","width","attribution","url","_c","$RefreshReg$"],"sources":["/Users/brysonlindsey/Documents/my-project/frontend/src/components/MapComponent.js"],"sourcesContent":["// frontend/src/components/MapComponent.js\n\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix default icon issues (if needed)\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nfunction MapComponent({ data, zipCode, center }) {\n  // center is expected as an object: { lat: <number>, lon: <number> }\n  // Fallback to a default coordinate if none provided.\n  const defaultCenter = center ? [center.lat, center.lon] : [37.773972, -122.431297];\n\n  // Marker for the entered zip code.\n  const enteredZipMarker = (\n    <Marker position={defaultCenter}>\n      <Popup>\n        Entered Zip Code: {zipCode}\n      </Popup>\n    </Marker>\n  );\n\n  // Extract unique nearby zip codes (exclude the entered zip code)\n  // We'll build an object keyed by zip code and store one set of coordinates.\n  const uniqueNearby = {};\n  data.forEach(person => {\n    if (person.zip_code !== zipCode && person.latitude && person.longitude) {\n      // Only add if we haven't added this zip code already.\n      if (!uniqueNearby[person.zip_code]) {\n        uniqueNearby[person.zip_code] = {\n          lat: parseFloat(person.latitude),\n          lon: parseFloat(person.longitude)\n        };\n      }\n    }\n  });\n\n  const uniqueMarkers = Object.entries(uniqueNearby).map(([zip, coords]) => (\n    <Marker key={zip} position={[coords.lat, coords.lon]}>\n      <Popup>\n        Nearby Zip: {zip}\n      </Popup>\n    </Marker>\n  ));\n\n  return (\n    <MapContainer center={defaultCenter} zoom={12} style={{ height: '300px', width: '100%' }}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {enteredZipMarker}\n      {uniqueMarkers}\n    </MapContainer>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}