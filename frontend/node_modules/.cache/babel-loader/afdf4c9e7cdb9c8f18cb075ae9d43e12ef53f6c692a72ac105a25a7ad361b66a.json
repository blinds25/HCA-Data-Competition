{"ast":null,"code":"var _jsxFileName = \"/Users/brysonlindsey/Documents/my-project/frontend/src/components/DataDashboard.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/DataDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Container, Typography, Box, Tabs, Tab, Slider, Button } from '@mui/material';\nimport MapComponent from './MapComponent';\nimport PeopleList from './PeopleList';\nimport EmailModal from './EmailModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataDashboard() {\n  _s();\n  var _location$state;\n  // Retrieve the zip code (passed from the landing page, e.g., via state)\n  const location = useLocation();\n  const zipCode = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.zipCode) || '';\n\n  // Two state variables to store local and nearby data\n  const [localData, setLocalData] = useState([]);\n  const [nearbyData, setNearbyData] = useState([]);\n\n  // State for controlling the selected tab: 0 for Local, 1 for Nearby\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  // State for handling the email modal (for group contact)\n  const [selectedEmailData, setSelectedEmailData] = useState(null);\n\n  // State for the maximum radius (in miles) for filtering nearby people.\n  // For example, default to 100 miles; assume nearby filtering uses a lower bound of 50 miles.\n  const [maxRadius, setMaxRadius] = useState(100);\n\n  // Fetch data from the API when zipCode or maxRadius changes\n  useEffect(() => {\n    if (zipCode) {\n      // Pass radius as a query parameter so that the backend can filter accordingly.\n      fetch(`http://localhost:8000/api/data/?zip_code=${zipCode}&radius=${maxRadius}`).then(res => res.json()).then(data => {\n        // Expect the API to return an object with \"local\" and \"nearby\" arrays.\n        setLocalData(data.local);\n        setNearbyData(data.nearby);\n      }).catch(err => console.error(\"Error fetching data:\", err));\n    }\n  }, [zipCode, maxRadius]);\n\n  // Handle tab switch\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Handle slider change for radius\n  const handleRadiusChange = (event, newValue) => {\n    setMaxRadius(newValue);\n  };\n\n  // Open the email modal for the whole list.\n  // For simplicity, we assume each Person object has an \"email\" field.\n  // If not, you might modify this to use another contact method.\n  const openEmailModal = (group, subjectType) => {\n    const recipientList = group.map(person => person.email);\n    const subject = subjectType === 'local' ? 'Contact All Local People' : 'Contact All Nearby People';\n    setSelectedEmailData({\n      recipientList,\n      subject\n    });\n  };\n  const closeEmailModal = () => {\n    setSelectedEmailData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"Data Dashboard for Zip: \", zipCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(MapComponent, {\n        data: [...localData, ...nearbyData]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: [\"Maximum Radius for Nearby (miles): \", maxRadius]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: maxRadius,\n        min: 50,\n        max: 200,\n        step: 1,\n        valueLabelDisplay: \"auto\",\n        onChange: handleRadiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: selectedTab,\n      onChange: handleTabChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Local People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Nearby People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), selectedTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(PeopleList, {\n        people: localData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openEmailModal(localData, 'local'),\n          children: \"Contact All Local People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), selectedTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(PeopleList, {\n        people: nearbyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => openEmailModal(nearbyData, 'nearby'),\n          children: \"Contact All Nearby People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), selectedEmailData && /*#__PURE__*/_jsxDEV(EmailModal, {\n      emailData: selectedEmailData,\n      onClose: closeEmailModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(DataDashboard, \"LYEUf/BB2kuEWY00wHAgGEQWQVE=\", false, function () {\n  return [useLocation];\n});\n_c = DataDashboard;\nexport default DataDashboard;\nvar _c;\n$RefreshReg$(_c, \"DataDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Container","Typography","Box","Tabs","Tab","Slider","Button","MapComponent","PeopleList","EmailModal","jsxDEV","_jsxDEV","DataDashboard","_s","_location$state","location","zipCode","state","localData","setLocalData","nearbyData","setNearbyData","selectedTab","setSelectedTab","selectedEmailData","setSelectedEmailData","maxRadius","setMaxRadius","fetch","then","res","json","data","local","nearby","catch","err","console","error","handleTabChange","event","newValue","handleRadiusChange","openEmailModal","group","subjectType","recipientList","map","person","email","subject","closeEmailModal","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","my","mb","value","min","max","step","valueLabelDisplay","onChange","centered","label","people","onClick","emailData","onClose","_c","$RefreshReg$"],"sources":["/Users/brysonlindsey/Documents/my-project/frontend/src/components/DataDashboard.js"],"sourcesContent":["// frontend/src/components/DataDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Container, Typography, Box, Tabs, Tab, Slider, Button } from '@mui/material';\nimport MapComponent from './MapComponent';\nimport PeopleList from './PeopleList';\nimport EmailModal from './EmailModal';\n\nfunction DataDashboard() {\n  // Retrieve the zip code (passed from the landing page, e.g., via state)\n  const location = useLocation();\n  const zipCode = location.state?.zipCode || '';\n\n  // Two state variables to store local and nearby data\n  const [localData, setLocalData] = useState([]);\n  const [nearbyData, setNearbyData] = useState([]);\n\n  // State for controlling the selected tab: 0 for Local, 1 for Nearby\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  // State for handling the email modal (for group contact)\n  const [selectedEmailData, setSelectedEmailData] = useState(null);\n\n  // State for the maximum radius (in miles) for filtering nearby people.\n  // For example, default to 100 miles; assume nearby filtering uses a lower bound of 50 miles.\n  const [maxRadius, setMaxRadius] = useState(100);\n\n  // Fetch data from the API when zipCode or maxRadius changes\n  useEffect(() => {\n    if (zipCode) {\n      // Pass radius as a query parameter so that the backend can filter accordingly.\n      fetch(`http://localhost:8000/api/data/?zip_code=${zipCode}&radius=${maxRadius}`)\n        .then((res) => res.json())\n        .then((data) => {\n          // Expect the API to return an object with \"local\" and \"nearby\" arrays.\n          setLocalData(data.local);\n          setNearbyData(data.nearby);\n        })\n        .catch((err) => console.error(\"Error fetching data:\", err));\n    }\n  }, [zipCode, maxRadius]);\n\n  // Handle tab switch\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  // Handle slider change for radius\n  const handleRadiusChange = (event, newValue) => {\n    setMaxRadius(newValue);\n  };\n\n  // Open the email modal for the whole list.\n  // For simplicity, we assume each Person object has an \"email\" field.\n  // If not, you might modify this to use another contact method.\n  const openEmailModal = (group, subjectType) => {\n    const recipientList = group.map((person) => person.email);\n    const subject =\n      subjectType === 'local' ? 'Contact All Local People' : 'Contact All Nearby People';\n    setSelectedEmailData({ recipientList, subject });\n  };\n\n  const closeEmailModal = () => {\n    setSelectedEmailData(null);\n  };\n\n  return (\n    <Container sx={{ mt: 4 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Data Dashboard for Zip: {zipCode}\n      </Typography>\n\n      {/* Map View */}\n      <Box sx={{ my: 4 }}>\n        <MapComponent data={[...localData, ...nearbyData]} />\n      </Box>\n\n      {/* Radius Selector for Nearby List */}\n      <Box sx={{ mb: 2 }}>\n        <Typography gutterBottom>\n          Maximum Radius for Nearby (miles): {maxRadius}\n        </Typography>\n        <Slider\n          value={maxRadius}\n          min={50}\n          max={200}\n          step={1}\n          valueLabelDisplay=\"auto\"\n          onChange={handleRadiusChange}\n        />\n      </Box>\n\n      {/* Tab System for Lists */}\n      <Tabs value={selectedTab} onChange={handleTabChange} centered>\n        <Tab label=\"Local People\" />\n        <Tab label=\"Nearby People\" />\n      </Tabs>\n\n      {selectedTab === 0 && (\n        <Box>\n          <PeopleList people={localData} />\n          <Box sx={{ mt: 2 }}>\n            <Button\n              variant=\"contained\"\n              onClick={() => openEmailModal(localData, 'local')}\n            >\n              Contact All Local People\n            </Button>\n          </Box>\n        </Box>\n      )}\n      {selectedTab === 1 && (\n        <Box>\n          <PeopleList people={nearbyData} />\n          <Box sx={{ mt: 2 }}>\n            <Button\n              variant=\"contained\"\n              onClick={() => openEmailModal(nearbyData, 'nearby')}\n            >\n              Contact All Nearby People\n            </Button>\n          </Box>\n        </Box>\n      )}\n\n      {selectedEmailData && (\n        <EmailModal emailData={selectedEmailData} onClose={closeEmailModal} />\n      )}\n    </Container>\n  );\n}\n\nexport default DataDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}