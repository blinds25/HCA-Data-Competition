{"ast":null,"code":"var _jsxFileName = \"/Users/brysonlindsey/Documents/my-project/frontend/src/components/MapComponent.js\";\n// frontend/src/components/MapComponent.js\n\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Custom icons for markers using external resources.\n// Red marker for the entered zip code.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',\n  iconRetinaUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n  shadowSize: [41, 41]\n});\n\n// Blue marker for unique nearby zip codes.\nconst blueIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\n  iconRetinaUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n  shadowSize: [41, 41]\n});\nfunction MapComponent({\n  data,\n  zipCode,\n  center\n}) {\n  // If center is provided, use it; otherwise fallback to default (SF).\n  const defaultCenter = center ? [center.lat, center.lon] : [37.773972, -122.431297];\n\n  // Marker for the entered zip code, using red icon.\n  const enteredZipMarker = /*#__PURE__*/_jsxDEV(Marker, {\n    position: defaultCenter,\n    icon: redIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [\"Entered Zip Code: \", zipCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  // Build a dictionary of unique nearby zip codes (exclude the entered zip)\n  const uniqueNearby = {};\n  data.forEach(person => {\n    if (person.zip_code !== zipCode && person.latitude && person.longitude) {\n      // Only add if this zip code is not already added.\n      if (!uniqueNearby[person.zip_code]) {\n        uniqueNearby[person.zip_code] = {\n          lat: parseFloat(person.latitude),\n          lon: parseFloat(person.longitude)\n        };\n      }\n    }\n  });\n  const uniqueMarkers = Object.entries(uniqueNearby).map(([zip, coords]) => /*#__PURE__*/_jsxDEV(Marker, {\n    position: [coords.lat, coords.lon],\n    icon: blueIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [\"Nearby Zip: \", zip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, zip, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: defaultCenter,\n    zoom: 12,\n    style: {\n      height: '300px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), enteredZipMarker, uniqueMarkers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","redIcon","Icon","iconUrl","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","shadowUrl","require","shadowSize","blueIcon","MapComponent","data","zipCode","center","defaultCenter","lat","lon","enteredZipMarker","position","icon","children","fileName","_jsxFileName","lineNumber","columnNumber","uniqueNearby","forEach","person","zip_code","latitude","longitude","parseFloat","uniqueMarkers","Object","entries","map","zip","coords","zoom","style","height","width","attribution","url","_c","$RefreshReg$"],"sources":["/Users/brysonlindsey/Documents/my-project/frontend/src/components/MapComponent.js"],"sourcesContent":["// frontend/src/components/MapComponent.js\n\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Custom icons for markers using external resources.\n// Red marker for the entered zip code.\nconst redIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',\n  iconRetinaUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n  shadowSize: [41, 41]\n});\n\n// Blue marker for unique nearby zip codes.\nconst blueIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\n  iconRetinaUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n  shadowSize: [41, 41]\n});\n\nfunction MapComponent({ data, zipCode, center }) {\n  // If center is provided, use it; otherwise fallback to default (SF).\n  const defaultCenter = center ? [center.lat, center.lon] : [37.773972, -122.431297];\n\n  // Marker for the entered zip code, using red icon.\n  const enteredZipMarker = (\n    <Marker position={defaultCenter} icon={redIcon}>\n      <Popup>\n        Entered Zip Code: {zipCode}\n      </Popup>\n    </Marker>\n  );\n\n  // Build a dictionary of unique nearby zip codes (exclude the entered zip)\n  const uniqueNearby = {};\n  data.forEach(person => {\n    if (person.zip_code !== zipCode && person.latitude && person.longitude) {\n      // Only add if this zip code is not already added.\n      if (!uniqueNearby[person.zip_code]) {\n        uniqueNearby[person.zip_code] = {\n          lat: parseFloat(person.latitude),\n          lon: parseFloat(person.longitude)\n        };\n      }\n    }\n  });\n\n  const uniqueMarkers = Object.entries(uniqueNearby).map(([zip, coords]) => (\n    <Marker key={zip} position={[coords.lat, coords.lon]} icon={blueIcon}>\n      <Popup>\n        Nearby Zip: {zip}\n      </Popup>\n    </Marker>\n  ));\n\n  return (\n    <MapContainer center={defaultCenter} zoom={12} style={{ height: '300px', width: '100%' }}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {enteredZipMarker}\n      {uniqueMarkers}\n    </MapContainer>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}