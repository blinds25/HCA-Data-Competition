{"ast":null,"code":"var _jsxFileName = \"/Users/brysonlindsey/Documents/my-project/frontend/src/components/EmailModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ConfirmationModal from './ConfirmationModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailModal({\n  emailData,\n  onClose\n}) {\n  _s();\n  const [subject, setSubject] = useState(emailData.subject);\n  const [message, setMessage] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const handleSendClick = () => {\n    setShowConfirmation(true);\n  };\n  const handleConfirmSend = () => {\n    // Call backend API to send email\n    fetch('http://localhost:8000/api/send-email/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        subject,\n        message,\n        recipient: emailData.recipient\n      })\n    }).then(res => res.json()).then(data => {\n      alert(data.success ? data.success : data.error);\n      setShowConfirmation(false);\n      onClose();\n    }).catch(err => {\n      console.error(err);\n      alert('Error sending email');\n      setShowConfirmation(false);\n    });\n  };\n  const handleCancelConfirm = () => {\n    setShowConfirmation(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: subject,\n          onChange: e => setSubject(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          cols: \"40\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendClick,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), showConfirmation && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        onConfirm: handleConfirmSend,\n        onCancel: handleCancelConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailModal, \"riYHb2Vo8hgo/meHK6l4BwWjdag=\");\n_c = EmailModal;\nexport default EmailModal;\nvar _c;\n$RefreshReg$(_c, \"EmailModal\");","map":{"version":3,"names":["React","useState","ConfirmationModal","jsxDEV","_jsxDEV","EmailModal","emailData","onClose","_s","subject","setSubject","message","setMessage","showConfirmation","setShowConfirmation","handleSendClick","handleConfirmSend","fetch","method","headers","body","JSON","stringify","recipient","then","res","json","data","alert","success","error","catch","err","console","handleCancelConfirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","rows","cols","onClick","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["/Users/brysonlindsey/Documents/my-project/frontend/src/components/EmailModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ConfirmationModal from './ConfirmationModal';\n\nfunction EmailModal({ emailData, onClose }) {\n  const [subject, setSubject] = useState(emailData.subject);\n  const [message, setMessage] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const handleSendClick = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmSend = () => {\n    // Call backend API to send email\n    fetch('http://localhost:8000/api/send-email/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        subject,\n        message,\n        recipient: emailData.recipient,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.success ? data.success : data.error);\n        setShowConfirmation(false);\n        onClose();\n      })\n      .catch((err) => {\n        console.error(err);\n        alert('Error sending email');\n        setShowConfirmation(false);\n      });\n  };\n\n  const handleCancelConfirm = () => {\n    setShowConfirmation(false);\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <h2>Send Email</h2>\n        <label>\n          Subject:\n          <input \n            type=\"text\" \n            value={subject} \n            onChange={(e) => setSubject(e.target.value)} \n          />\n        </label>\n        <br /><br />\n        <label>\n          Message:\n          <textarea \n            rows=\"5\" \n            cols=\"40\" \n            value={message} \n            onChange={(e) => setMessage(e.target.value)} \n          />\n        </label>\n        <br /><br />\n        <button onClick={handleSendClick}>Send Email</button>\n        <button onClick={onClose}>Close</button>\n        {showConfirmation && (\n          <ConfirmationModal \n            onConfirm={handleConfirmSend} \n            onCancel={handleCancelConfirm} \n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default EmailModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,UAAUA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACK,SAAS,CAACG,OAAO,CAAC;EACzD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC5BD,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAC,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBb,OAAO;QACPE,OAAO;QACPY,SAAS,EAAEjB,SAAS,CAACiB;MACvB,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,KAAK,CAACD,IAAI,CAACE,OAAO,GAAGF,IAAI,CAACE,OAAO,GAAGF,IAAI,CAACG,KAAK,CAAC;MAC/ChB,mBAAmB,CAAC,KAAK,CAAC;MAC1BP,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,CACDwB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACH,KAAK,CAACE,GAAG,CAAC;MAClBJ,KAAK,CAAC,qBAAqB,CAAC;MAC5Bd,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC;EAED,MAAMoB,mBAAmB,GAAGA,CAAA,KAAM;IAChCpB,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACEV,OAAA;IAAK+B,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBhC,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhC,OAAA;QAAAgC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBpC,OAAA;QAAAgC,QAAA,GAAO,UAEL,eAAAhC,OAAA;UACEqC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjC,OAAQ;UACfkC,QAAQ,EAAGC,CAAC,IAAKlC,UAAU,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRpC,OAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAApC,OAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACZpC,OAAA;QAAAgC,QAAA,GAAO,UAEL,eAAAhC,OAAA;UACE0C,IAAI,EAAC,GAAG;UACRC,IAAI,EAAC,IAAI;UACTL,KAAK,EAAE/B,OAAQ;UACfgC,QAAQ,EAAGC,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRpC,OAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAApC,OAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACZpC,OAAA;QAAQ4C,OAAO,EAAEjC,eAAgB;QAAAqB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrDpC,OAAA;QAAQ4C,OAAO,EAAEzC,OAAQ;QAAA6B,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvC3B,gBAAgB,iBACfT,OAAA,CAACF,iBAAiB;QAChB+C,SAAS,EAAEjC,iBAAkB;QAC7BkC,QAAQ,EAAEhB;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CAvEQH,UAAU;AAAA8C,EAAA,GAAV9C,UAAU;AAyEnB,eAAeA,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}