{"ast":null,"code":"var _jsxFileName = \"/Users/brysonlindsey/Documents/my-project/frontend/src/components/EmailModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@mui/material';\nimport ConfirmationModal from './ConfirmationModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EmailModal({\n  emailData,\n  onClose\n}) {\n  _s();\n  const [subject, setSubject] = useState(emailData.subject);\n  const [message, setMessage] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const handleSendClick = () => {\n    setShowConfirmation(true);\n  };\n  const handleConfirmSend = () => {\n    fetch('http://localhost:8000/api/send-email/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        subject,\n        message,\n        recipient: emailData.recipient\n      })\n    }).then(res => res.json()).then(data => {\n      alert(data.success ? data.success : data.error);\n      setShowConfirmation(false);\n      onClose();\n    }).catch(err => {\n      console.error(err);\n      alert('Error sending email');\n      setShowConfirmation(false);\n    });\n  };\n  const handleCancelConfirm = () => {\n    setShowConfirmation(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: true,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Subject\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: subject,\n          onChange: e => setSubject(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Message\",\n          fullWidth: true,\n          variant: \"outlined\",\n          multiline: true,\n          rows: 4,\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          sx: {\n            mt: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSendClick,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Send Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      onConfirm: handleConfirmSend,\n      onCancel: handleCancelConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(EmailModal, \"riYHb2Vo8hgo/meHK6l4BwWjdag=\");\n_c = EmailModal;\nexport default EmailModal;\nvar _c;\n$RefreshReg$(_c, \"EmailModal\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","ConfirmationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","EmailModal","emailData","onClose","_s","subject","setSubject","message","setMessage","showConfirmation","setShowConfirmation","handleSendClick","handleConfirmSend","fetch","method","headers","body","JSON","stringify","recipient","then","res","json","data","alert","success","error","catch","err","console","handleCancelConfirm","children","open","fileName","_jsxFileName","lineNumber","columnNumber","margin","label","fullWidth","variant","value","onChange","e","target","multiline","rows","sx","mt","onClick","color","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["/Users/brysonlindsey/Documents/my-project/frontend/src/components/EmailModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Dialog, DialogTitle, DialogContent, DialogActions, \n  TextField, Button \n} from '@mui/material';\nimport ConfirmationModal from './ConfirmationModal';\n\nfunction EmailModal({ emailData, onClose }) {\n  const [subject, setSubject] = useState(emailData.subject);\n  const [message, setMessage] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const handleSendClick = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleConfirmSend = () => {\n    fetch('http://localhost:8000/api/send-email/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ subject, message, recipient: emailData.recipient }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.success ? data.success : data.error);\n        setShowConfirmation(false);\n        onClose();\n      })\n      .catch((err) => {\n        console.error(err);\n        alert('Error sending email');\n        setShowConfirmation(false);\n      });\n  };\n\n  const handleCancelConfirm = () => {\n    setShowConfirmation(false);\n  };\n\n  return (\n    <>\n      <Dialog open onClose={onClose}>\n        <DialogTitle>Send Email</DialogTitle>\n        <DialogContent>\n          <TextField\n            margin=\"dense\"\n            label=\"Subject\"\n            fullWidth\n            variant=\"outlined\"\n            value={subject}\n            onChange={(e) => setSubject(e.target.value)}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Message\"\n            fullWidth\n            variant=\"outlined\"\n            multiline\n            rows={4}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            sx={{ mt: 2 }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSendClick} variant=\"contained\" color=\"primary\">\n            Send Email\n          </Button>\n          <Button onClick={onClose} variant=\"outlined\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {showConfirmation && (\n        <ConfirmationModal onConfirm={handleConfirmSend} onCancel={handleCancelConfirm} />\n      )}\n    </>\n  );\n}\n\nexport default EmailModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}