{"ast":null,"code":"var _jsxFileName = \"/Users/brysonlindsey/Documents/my-project/frontend/src/components/PeopleList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography, TablePagination } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PeopleList({\n  people,\n  onContact\n}) {\n  _s();\n  // State for the current page (0-indexed)\n  const [page, setPage] = useState(0);\n  const rowsPerPage = 10; // Fixed at 10 rows per page\n\n  // Handle page change\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  // Slice the data to display only the rows for the current page\n  const paginatedPeople = people.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"People List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), people.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No people found for this group.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: paginatedPeople.map(person => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [person.first_name, \" \", person.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: person.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: person.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: person.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: person.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: person.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => onContact(person.location, 'A'),\n                  sx: {\n                    mr: 1\n                  },\n                  children: \"Contact A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => onContact(person.location, 'B'),\n                  children: \"Contact B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)]\n            }, person.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        component: \"div\",\n        count: people.length,\n        page: page,\n        onPageChange: handleChangePage,\n        rowsPerPage: rowsPerPage\n        // We set the options to only allow 10 rows per page\n        ,\n        rowsPerPageOptions: [rowsPerPage]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(PeopleList, \"54dVtaqv/8WouJ+rx2t67oLHEmc=\");\n_c = PeopleList;\nexport default PeopleList;\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Typography","TablePagination","jsxDEV","_jsxDEV","PeopleList","people","onContact","_s","page","setPage","rowsPerPage","handleChangePage","event","newPage","paginatedPeople","slice","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","map","person","first_name","last_name","location","city","state","department","position","onClick","sx","mr","id","component","count","onPageChange","rowsPerPageOptions","_c","$RefreshReg$"],"sources":["/Users/brysonlindsey/Documents/my-project/frontend/src/components/PeopleList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, Paper, Button, Typography, TablePagination \n} from '@mui/material';\n\nfunction PeopleList({ people, onContact }) {\n  // State for the current page (0-indexed)\n  const [page, setPage] = useState(0);\n  const rowsPerPage = 10; // Fixed at 10 rows per page\n\n  // Handle page change\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  // Slice the data to display only the rows for the current page\n  const paginatedPeople = people.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n  return (\n    <div>\n      <Typography variant=\"h6\" gutterBottom>\n        People List\n      </Typography>\n      {people.length === 0 ? (\n        <Typography>No people found for this group.</Typography>\n      ) : (\n        <Paper>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>City</TableCell>\n                  <TableCell>State</TableCell>\n                  <TableCell>Department</TableCell>\n                  <TableCell>Position</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {paginatedPeople.map((person) => (\n                  <TableRow key={person.id}>\n                    <TableCell>{person.first_name} {person.last_name}</TableCell>\n                    <TableCell>{person.location}</TableCell>\n                    <TableCell>{person.city}</TableCell>\n                    <TableCell>{person.state}</TableCell>\n                    <TableCell>{person.department}</TableCell>\n                    <TableCell>{person.position}</TableCell>\n                    <TableCell>\n                      <Button \n                        variant=\"outlined\" \n                        onClick={() => onContact(person.location, 'A')}\n                        sx={{ mr: 1 }}\n                      >\n                        Contact A\n                      </Button>\n                      <Button \n                        variant=\"outlined\" \n                        onClick={() => onContact(person.location, 'B')}\n                      >\n                        Contact B\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            component=\"div\"\n            count={people.length}\n            page={page}\n            onPageChange={handleChangePage}\n            rowsPerPage={rowsPerPage}\n            // We set the options to only allow 10 rows per page\n            rowsPerPageOptions={[rowsPerPage]}\n          />\n        </Paper>\n      )}\n    </div>\n  );\n}\n\nexport default PeopleList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAC3CC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,eAAe,QAC1D,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMmB,WAAW,GAAG,EAAE,CAAC,CAAC;;EAExB;EACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3CJ,OAAO,CAACI,OAAO,CAAC;EAClB,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGT,MAAM,CAACU,KAAK,CAACP,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC;EAE1F,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACH,UAAU;MAACiB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZjB,MAAM,CAACkB,MAAM,KAAK,CAAC,gBAClBpB,OAAA,CAACH,UAAU;MAAAgB,QAAA,EAAC;IAA+B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,gBAExDnB,OAAA,CAACL,KAAK;MAAAkB,QAAA,gBACJb,OAAA,CAACR,cAAc;QAAAqB,QAAA,eACbb,OAAA,CAACX,KAAK;UAAAwB,QAAA,gBACJb,OAAA,CAACP,SAAS;YAAAoB,QAAA,eACRb,OAAA,CAACN,QAAQ;cAAAmB,QAAA,gBACPb,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC3BnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAC;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC/BnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC3BnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAC;cAAK;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC5BnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAC;cAAU;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eACjCnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAC;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC/BnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAC;cAAO;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZnB,OAAA,CAACV,SAAS;YAAAuB,QAAA,EACPF,eAAe,CAACU,GAAG,CAAEC,MAAM,iBAC1BtB,OAAA,CAACN,QAAQ;cAAAmB,QAAA,gBACPb,OAAA,CAACT,SAAS;gBAAAsB,QAAA,GAAES,MAAM,CAACC,UAAU,EAAC,GAAC,EAACD,MAAM,CAACE,SAAS;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7DnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAES,MAAM,CAACG;cAAQ;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACxCnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAES,MAAM,CAACI;cAAI;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACpCnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAES,MAAM,CAACK;cAAK;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACrCnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAES,MAAM,CAACM;cAAU;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC1CnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,EAAES,MAAM,CAACO;cAAQ;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACxCnB,OAAA,CAACT,SAAS;gBAAAsB,QAAA,gBACRb,OAAA,CAACJ,MAAM;kBACLkB,OAAO,EAAC,UAAU;kBAClBgB,OAAO,EAAEA,CAAA,KAAM3B,SAAS,CAACmB,MAAM,CAACG,QAAQ,EAAE,GAAG,CAAE;kBAC/CM,EAAE,EAAE;oBAAEC,EAAE,EAAE;kBAAE,CAAE;kBAAAnB,QAAA,EACf;gBAED;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTnB,OAAA,CAACJ,MAAM;kBACLkB,OAAO,EAAC,UAAU;kBAClBgB,OAAO,EAAEA,CAAA,KAAM3B,SAAS,CAACmB,MAAM,CAACG,QAAQ,EAAE,GAAG,CAAE;kBAAAZ,QAAA,EAChD;gBAED;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA,GArBCG,MAAM,CAACW,EAAE;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsBd,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eACjBnB,OAAA,CAACF,eAAe;QACdoC,SAAS,EAAC,KAAK;QACfC,KAAK,EAAEjC,MAAM,CAACkB,MAAO;QACrBf,IAAI,EAAEA,IAAK;QACX+B,YAAY,EAAE5B,gBAAiB;QAC/BD,WAAW,EAAEA;QACb;QAAA;QACA8B,kBAAkB,EAAE,CAAC9B,WAAW;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CA7EQH,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AA+EnB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}